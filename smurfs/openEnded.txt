 1. What problem does the context API help solve?

Answer: The context API helps solve the problem of prop drilling. It follows us to give props to only the components who need them. This way a developer does not have to pass down props through 5 components that arenâ€™t going to use the props and just gives it to the last component at the bottom of the component tree.  
 
2. In your own words, describe actions, reducers and the store and their role in Redux. What does each piece do? Why is the store known as a 'single source of truth' in a redux application?

	Answer: The redux store is the centralized location for state. It can hold as many objects and arrays as you need. Actions are what we use to tell the reducer what happened on the UI. The reduce then takes that action and goes through the cases we store inside of it. If changes are needed then the reducer makes them and then gives them to the store.  The reason the store is known as the single piece of truth is because the state inside of it can only be changed there through actions creators and can not be rewritten or reshaped anywhere else in the application. 

 3.What is the difference between Application state and Component state? When would be a good time to use one over the other?

	Answer: Component state is state that resides inside of a component and can be changed/ managed inside that component. Application state is state held/managed outside the component on a global state, kind of like the redux store. Component state is great for forms and inputs and application state is good for when you need to hold a lot of data and that data needs to be sent throughout the application to all different components.  
	
4. Describe redux-thunk, what does it allow us to do? How does it change our action-creators?

 	Answer: Redux thunk is a middleware that enables us to have async data in our application. A reducer is excepting an action to be an object and when we make axios calls it  returns a function. If a reducer gets a function it then sends an error. Thunk stops the function from getting to the reducer and passes dispatch for us so we can send out an action object to the reducer instead.
 
5. What is your favorite state management system you've learned and this sprint? Please explain why!

	Answer: My favorite state management system is redux. It was awesome to use and extremely simple. After using redux i think i now have a better understanding of how state, props and everything else about react works. This was an awesome week for me and I took a big jump forward as a developer.
